Mesos is a cluster resource manager that efficiently shares and isolates resources among multiple distributed applications, or _frameworks_. It currently supports "Hadoop":http://hadoop.apache.org, "MPI":http://www.mcs.anl.gov/research/projects/mpich2/, and "Spark":http://github.com/mesos/spark (a new MapReduce-like framework from the Mesos team that supports for low-latency interactive use and iterative jobs). Mesos can also serve as a platform upon which to build new cluster computing frameworks, with the powerful advantage that your frameworks will be able to share resources with Hadoop, MPI, etc and can therefore easily be adopted by those communities.

You can use Mesos in several ways:
* To run Hadoop, MPI, Spark and other applications on a shared pool of machines.
* To run multiple instances of Hadoop on the same cluster -- say separate instances for production and experimental jobs -- or even multiple versions of Hadoop (to test out a new version).
* To build new cluster applications without having to reinvent low-level facilities for farming out tasks to different nodes, monitoring them, etc, and have them coexist with existing frameworks.

Mesos's features include:
* Fault-tolerant replicated master node (using "ZooKeeper":http://hadoop.apache.org/zookeeper/).
* Support for isolating frameworks on each machine using "Linux Containers":http://lxc.sourceforge.net/.
* Web UI for viewing cluster state.
* Efficient fine-grained resource sharing mechanism ("resource offers") that allows data-intensive frameworks like Hadoop to achieve high data locality.
* Multi-resource scheduling (memory and CPU aware).

This guide explains how to set up and test Mesos, and links to further documentation on other topics.

h1. System Requirements

Mesos runs on Linux and Mac OS X, and has previously also been tested on OpenSolaris. You will need the following packages to run it:

* g++ 4.1 or higher
* SWIG 1.3.40 or higher
* Python 2.6 (for the Mesos web UI)
* Java 1.6 or higher (to run Java frameworks including Hadoop and "Spark":http://github.com/mesos/spark)

h1. Building Mesos

Mesos uses the standard GNU build tools. You should configure it using the @configure@ script in the root directory. This script accepts the following arguments to enable various options:
* @--with-python-headers=DIR@: Find Python header files in @DIR@ (to turn on Python support). Recommended.
* @--with-webui@: Enable the Mesos web UI (which requires Python 2.6). Recommended.
* @--with-java-home=DIR@: Enable Java framework support with a given installation of Java. Required for Hadoop and Spark.
* @--with-zookeeper=DIR@ or @--with-included-zookeeper@: Enable master fault-tolerance using either an existing ZooKeeper installation or the version of ZooKeeper bundled with Mesos. For more help, see [[using ZooKeeper]].

The Git repository contains sample configure scripts for Mac OS X and several Linux distributions with the right paths for each platform. These assume that you have installed the correct packages (e.g. @python-dev@ and the JDK).

After you have run @configure@, you can build Mesos with @make@.

h1. Testing the Build

After you build Mesos, you can run its unit tests using the @alltests@ program located in @src@. Note that a few tests for specific platforms are disabled by default. You can run @alltests@ with @--help@ for help about its options.

You can also set up a small Mesos cluster and run a job on it as follows:
# Go into the @src@ directory of your installation.
# Type @./mesos-master@ to launch the master.
# Take note of the master identifier that is printed to stdout, which will look like <code>mesos://1@192.168.0.1:5050</code>.
# View the master's web UI at @http://[hostname of master]:8080@.
# Launch a slave by typing @./mesos-slave --url=[URL of master]@. The slave will show up on the web UI if you refresh it.
# Run the C++ test framework (a sample application that just executes five tasks on the cluster) using @./cpp-test-framework [URL of master]@. It should successfully finish after running five tasks.

h1. Where to Go From Here

* [[Mesos architecture]] -- an overview of Mesos concepts.
* [[Framework development guide]] -- learn how to build applications on Mesos.
* [[Configuring Mesos|Configuration]]
* Framework guides:
** [[Running Hadoop on Mesos]]
** [[Running MPI on Mesos]]
** [[Running Spark on Mesos]]
* Feature guides:
** [[Deploy scripts]] for launching up a cluster on a set of machines.
** [[EC2 scripts]] for launching a Mesos cluster on Amazon EC2.
** [[Logging and Debugging]] -- viewing Mesos and framework logs.
** [[Using ZooKeeper]] for master fault-tolerance.
** [[Using Linux Containers]] for resource isolation on slaves.
* [[Mesos internals]] -- an overview of the codebase and internal organization.
* [[Mesos development roadmap|Roadmap]]