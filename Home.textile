h1. Overview of Mesos

Mesos is a <i>cluster operating system</i>. Unlike traditional operating systems (e.g. Linux or Windows) that support applications on a single node, Mesos is a platform on which to build <i>distributed applications</i> (which we also call <i>frameworks</i>) such as "Hadoop MapReduce":http://hadoop.apache.org, "MPI":http://www.mcs.anl.gov/research/projects/mpich2/, and "Spark":http://github.com/mesos/spark--new MapReduce-like framework from the Mesos team that supports low-latency interactive and iterative jobs.

h3. You can use Mesos in several ways:
* To run Hadoop, MPI, Spark and other distributed applications fon a shared pool of machines.
* To run multiple instances of Hadoop on the same cluster -- say separate instances for production and experimental jobs -- or even multiple versions of Hadoop (to test out a new version).
* To build new cluster applications without having to reinvent low-level facilities for farming out tasks to different nodes, monitoring them, etc, and have your apps coexist with existing ones.

h3. Mesos's features include:
* Fault-tolerant replicated master node (using "ZooKeeper":http://hadoop.apache.org/zookeeper/).
* Support for isolating apps and frameworks on each machine using "Linux Containers":http://lxc.sourceforge.net/.
* Web UI for viewing cluster state.
* Efficient fine-grained resource sharing mechanism ("resource offers") that allows data-intensive frameworks like Hadoop to achieve high data locality.
* Multi-resource scheduling (memory and CPU aware).

This guide explains how to set up and test Mesos, and links to further documentation on other topics.

_*Please note that Mesos is still in alpha. The current version is only intended for early testing.*_

h2. What you'll find here:</u></b>
* System Requirements
* Downloading Mesos
* Building Mesos
* Testing the Build
* Deploying to a Cluster
* Where to Go From Here

h1. System Requirements

Mesos runs on Linux and Mac OS X, and has previously also been tested on OpenSolaris. You will need the following packages to run it:

* g++ 4.1 or higher
* SWIG 1.3.40 or higher (If you install swig on OS X via macports, in addition to @port install swig@, you will also need to do @port install swig-java@ and @port install swig-python@)
* Python 2.6 (for the Mesos web UI)
* Java 1.6 or higher (to run Java apps/frameworks including Hadoop and "Spark":http://github.com/mesos/spark)

h1. Downloading Mesos

You can obtain Mesos in two ways: by downloading a tagged "release" from the [[downloads page|http://github.com/mesos/mesos/downloads]], or by checking it out from the Git repository using @git clone git://github.com/mesos/mesos@.

h1. Building Mesos

Mesos uses the standard GNU build tools. You should configure it using the @configure@ script in the root directory. This script accepts the following arguments to enable various options:
* @--with-python-headers=DIR@: Find Python header files in @DIR@ (to turn on Python support). Recommended.
* @--with-webui@: Enable the Mesos web UI (which requires Python 2.6). Recommended.
* @--with-java-home=DIR@: Enable Java application/framework support with a given installation of Java. Required for Hadoop and Spark.
* @--with-java-headers=DIR@: Find Java header files (necessary for newer versions of OS X Snow Leopard).
* @--with-zookeeper=DIR@ or @--with-included-zookeeper@: Enable master fault-tolerance using an existing ZooKeeper installation or the version of ZooKeeper bundled with Mesos. For details, see [[using ZooKeeper]].

The Git repository contains configure template scripts with the right paths for Mac OS X and several Linux distributions. These still assume that you have installed the correct packages (e.g. @python-dev@ and the JDK).

After you have run @configure@, you can build Mesos with @make@.

*Notes:*
* On 32-bit platforms, you should set @CXXFLAGS="-march=i486"@ when running @configure@ to ensure certain atomic instructions can be used.
* @configure@ prints a warning at the end about "unrecognized options: --with-java-home, ...". This comes from one of the nested @configure@ scripts that we call, so it doesn't mean that your options were ignored.

h1. Testing the Build

After you build Mesos, you can run its unit tests using the @alltests@ program located in @bin/tests@. Note that a few tests for specific platforms are disabled by default. You can run @alltests@ with @--help@ to view its options.

You can also set up a small Mesos cluster and run a job on it as follows:
# Go into the directory where you built Mesos.
# Type @bin/mesos-master@ to launch the master.
# Take note of the master URL that is printed to stdout, which will look like <code>mesos://1@192.168.0.1:5050</code>.
# View the master's web UI at @http://[hostname of master]:8080@.
# Launch a slave by typing @bin/mesos-slave --url=[URL of master]@. The slave will show up on the web UI if you refresh it.
# Run the C++ test framework (a sample that just runs five tasks on the cluster) using @bin/examples/cpp-test-framework [URL of master]@. It should successfully exit after running five tasks.

h1. Deploying to a Cluster

Once you have run the basic tests, you can use Mesos's [[deploy scripts]] to launch a cluster on a set of nodes, or its [[EC2 scripts]] to launch a cluster on Amazon EC2.

h1. Where to Go From Here

* [[Mesos architecture]] -- an overview of Mesos concepts.
* [[App/Framework development guide]] -- learn how to build applications on top of Mesos.
* [[Configuring Mesos|Configuration]]
* Guide to running existing frameworks:
** [[Running Hadoop on Mesos]]
** [[Running Torque or MPI on Mesos]]
** [[Running Spark on Mesos|https://github.com/mesos/spark/wiki]]
** [[Running a web application farm on Mesos]]
* Feature guides:
** [[Deploy scripts]] for launching a Mesos cluster on a set of machines.
** [[EC2 scripts]] for launching a Mesos cluster on Amazon EC2.
** [[Logging and Debugging]] -- viewing Mesos and framework logs.
** [[Using ZooKeeper]] for master fault-tolerance.
** [[Using Linux Containers]] for resource isolation on slaves.
* [[Mesos code internals overview|Mesos Code Internals]] -- an overview of the codebase and internal organization.
* [[Mesos development roadmap|Roadmap]]
* [[The official Mesos website|http://mesosproject.org]]